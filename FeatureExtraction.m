m= length(O1);
sum=0;
for k=1:m-1
    r= sign(O1(k))- sign(O1(k+1));
    q= abs(r);
    sum=sum+q;
end
ZCR= 0.5*sum;
aFE01 = audioFeatureExtractor("SampleRate",fs, ...
             "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "mfcc",true);
aFE02 = audioFeatureExtractor("SampleRate",fs, ...
             "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "mfccDelta",true);
aFE03 = audioFeatureExtractor("SampleRate",fs, ...
             "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "mfccDeltaDelta",true);
aFE011 = audioFeatureExtractor("SampleRate",fs, ...
             "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "gtcc",true);
aFE012 = audioFeatureExtractor("SampleRate",fs, ...
             "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "gtccDelta",true);
aFE013 = audioFeatureExtractor("SampleRate",fs, ...
             "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "gtccDeltaDelta",true);
aFE1 = audioFeatureExtractor("SampleRate",fs, ...
              "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "pitch",true);
aFE2 = audioFeatureExtractor("SampleRate",fs, ...
              "Window",hamming(round(0.03*fs),"periodic"), ...
              "OverlapLength",round(0.02*fs), ...
              "spectralCentroid",true);
aFE3 = audioFeatureExtractor("SampleRate",fs, ...
             "Window",hamming(round(0.03*fs),"periodic"), ...
             "OverlapLength",round(0.02*fs), ...
             "spectralKurtosis",true);
aFE4 = audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
                "spectralSkewness",true);
aFE5 = audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
                "spectralSpread",true);
 aFE6 = audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
                "spectralEntropy",true);   
 aFE7 = audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
                "spectralFlux",true);
 aFE8 = audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
               "spectralRolloffPoint",true);
 aFE9 = audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
               "spectralCrest",true);
 aFE10= audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
               "spectralDecrease",true);
 aFE11= audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
               "spectralFlatness",true) ;
 aFE12= audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
               "spectralSlope",true) ;
 aFE13= audioFeatureExtractor("SampleRate",fs, ...
                "Window",hamming(round(0.03*fs),"periodic"), ...
                "OverlapLength",round(0.02*fs), ...
               "harmonicRatio",true);
c01 = extract(aFE01,O1);C01=mean(c01);
c02 = extract(aFE02,O1);C02=mean(c02);
c03 = extract(aFE03,O1);C03=mean(c03);
c011 = extract(aFE011,O1);C011=mean(c011);
c012 = extract(aFE012,O1);C012=mean(c012);
c013 = extract(aFE013,O1);C013=mean(c013);
c1= extract(aFE1,O1);C1=mean(c1);
c2= extract(aFE2,O1);C2=mean(c2);
c3= extract(aFE3,O1);C3=mean(c3);
c4= extract(aFE4,O1);C4=mean(c4);
c5= extract(aFE5,O1);C5=mean(c5);
c6= extract(aFE6,O1);C6=mean(c6);
c7= extract(aFE7,O1);C7=mean(c7);
c8= extract(aFE8,O1);C8=mean(c8);
c9= extract(aFE9,O1);C9=mean(c9);
c10= extract(aFE10,O1);C10=mean(c10);
c11= extract(aFE11,O1);C11=mean(c11);
c12= extract(aFE12,O1);C12=mean(c12);
c13= extract(aFE13,O1);C13=mean(c13);

MFCC = C01;
MFCCDelta = C02;
MFCCDeltaDelta = C03;
GTCC = C011;
GTCCDelta = C012;
GTCCDeltaDelta= C013;
PITCH= C1;
SpectralCentroid= C2;
SpectralKurtosis= C3;
SpectralSkewness= C4;
SpectralSpread = C5;
SpectralEntropy = C6;
SpectralFlux = C7;
SpectralRolloffpoint = C8;
SpectralCrest = C9;
SpectralDecrease = C10;
SpectralFlatness = C11;
SpectralSlope = C12;
HarmonicRatio= C13;

T=table (MFCC,MFCCDelta,MFCCDeltaDelta,GTCC,GTCCDelta,GTCCDeltaDelta,PITCH,SpectralCentroid,SpectralKurtosis,SpectralSkewness,SpectralSpread,SpectralEntropy,SpectralFlux,SpectralRolloffpoint ,SpectralCrest,SpectralDecrease,SpectralFlatness ,SpectralSlope,HarmonicRatio,ZCR);